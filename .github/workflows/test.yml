# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  schedule:
    - cron: "0 13 * * 1-5" # every weekday at 13:00 UTC
  pull_request:
    paths-ignore:
      - "README.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: 1.4.*
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.0.*"
          - "1.1.*"
          - "1.2.*"
          - "1.3.*"
          - "1.4.*"
        docker-image:
          - "ghcr.io/ivarconr/unleash-enterprise:latest"
          - "ghcr.io/ivarconr/unleash-enterprise:6.6"
          - "ghcr.io/ivarconr/unleash-enterprise:6.5"
          - "ghcr.io/ivarconr/unleash-enterprise:6.4"
          - "unleashorg/unleash-server:latest"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Login to ghcr
        if: contains(matrix.docker-image, 'unleash-enterprise')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: gastonfournier
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Start Unleash test instance
        run: docker compose up -d --wait -t 90
        env:
          UNLEASH_DOCKER_IMAGE: ${{ matrix.docker-image }}
          UNLEASH_DEV_LICENSE: ${{ secrets.UNLEASH_DEV_LICENSE }}
      - run: go test -v -cover ./internal/provider/
        env:
          TF_ACC: "1"
          #TF_LOG: "debug"
          UNLEASH_ENTERPRISE: "${{ contains(matrix.docker-image, 'unleash-enterprise') }}"
        timeout-minutes: 3
